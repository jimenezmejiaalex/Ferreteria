/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ferreteria.vista;

import ferreteria.control.GestorPrincipal;
import ferreteria.modelo.Empleado;
import ferreteria.modelo.Modo;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aleex
 */
public class Admistracion extends javax.swing.JFrame {

    /**
     * Creates new form Adinistracion
     *
     * @param gestor
     */
    public Admistracion(GestorPrincipal gestor) {
        super("Administraci√≥n");
        initComponents();
        modo = Modo.MODO_INICIO;
        this.gestor = gestor;
        config();
    }

    private void config() {
        setLocationRelativeTo(null);
    }

    public void init() {
        setVisible(true);
    }

    // <editor-fold defaultstate="collapsed" desc="Metodos"> 
    public void activar() {
        desActivarBotones();
        btncancelar.setEnabled(true);
        campoID.setEnabled(true);
        campoNombre.setEnabled(true);
        campoRol.setEnabled(true);
        lbID.setEnabled(true);
        lbNombre.setEnabled(true);
        lbRol.setEnabled(true);
        btnOK.setEnabled(true);
    }

    public void activarBotones() {
        btncancelar.setEnabled(false);
        btnConsultar.setEnabled(true);
        btnIncluir.setEnabled(true);
        btnModificar.setEnabled(false);
        btnBorrar.setEnabled(false);
    }

    public void desActivarBotones() {
        btncancelar.setEnabled(true);
        btnConsultar.setEnabled(false);
        btnBorrar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnIncluir.setEnabled(false);
    }

    public void desactivar() {
        activarBotones();
        btncancelar.setEnabled(false);
        campoID.setEnabled(false);
        campoNombre.setEnabled(false);
        campoRol.setEnabled(false);
        lbID.setEnabled(false);
        lbNombre.setEnabled(false);
        lbRol.setEnabled(false);
        btnOK.setEnabled(false);
        campoPassword.setEnabled(false);
        Clave.setEnabled(false);
    }
// </editor-fold> 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        btnConsultar = new javax.swing.JButton();
        btnIncluir = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        lbID = new javax.swing.JLabel();
        campoID = new javax.swing.JTextField();
        campoNombre = new javax.swing.JTextField();
        lbNombre = new javax.swing.JLabel();
        lbRol = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();
        campoRol = new javax.swing.JComboBox<>();
        Clave = new javax.swing.JLabel();
        campoPassword = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        producBorrar = new javax.swing.JButton();
        producConsultar = new javax.swing.JButton();
        producModifica = new javax.swing.JButton();
        producIncluir = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(849, 855));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(849, 855));

        jPanel2.setLayout(new java.awt.GridBagLayout());

        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Rol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDatos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaDatos.setEnabled(false);
        tablaDatos.setRowSelectionAllowed(false);
        tablaDatos.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tablaDatos);
        tablaDatos.getAccessibleContext().setAccessibleName("Hola\n");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 281;
        gridBagConstraints.ipady = 207;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 7, 4);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 14, 4, 6);
        jPanel2.add(btnConsultar, gridBagConstraints);

        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 4, 6);
        jPanel2.add(btnIncluir, gridBagConstraints);

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 4, 6);
        jPanel2.add(btnModificar, gridBagConstraints);

        btnBorrar.setText("Borrar");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 4, 6);
        jPanel2.add(btnBorrar, gridBagConstraints);

        lbID.setText("ID");
        lbID.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(lbID, gridBagConstraints);

        campoID.setColumns(10);
        campoID.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(campoID, gridBagConstraints);

        campoNombre.setColumns(10);
        campoNombre.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(campoNombre, gridBagConstraints);

        lbNombre.setText("Nombre");
        lbNombre.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(lbNombre, gridBagConstraints);

        lbRol.setText("Rol");
        lbRol.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(lbRol, gridBagConstraints);

        btnOK.setText("OK");
        btnOK.setEnabled(false);
        btnOK.setMaximumSize(new java.awt.Dimension(60, 29));
        btnOK.setMinimumSize(new java.awt.Dimension(60, 29));
        btnOK.setPreferredSize(new java.awt.Dimension(60, 29));
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(btnOK, gridBagConstraints);

        btncancelar.setText("Cancelar");
        btncancelar.setEnabled(false);
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(btncancelar, gridBagConstraints);

        campoRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Bodeguero", "Cajero", "Despachador", "Vendedor" }));
        campoRol.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(campoRol, gridBagConstraints);

        Clave.setText("Clave");
        Clave.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(Clave, gridBagConstraints);

        campoPassword.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(campoPassword, gridBagConstraints);

        jTabbedPane1.addTab("Catalogo de Empleados", jPanel2);

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 800));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        producBorrar.setText("Borrar");
        producBorrar.setEnabled(false);
        producBorrar.setMaximumSize(new java.awt.Dimension(80, 29));
        producBorrar.setMinimumSize(new java.awt.Dimension(80, 29));
        producBorrar.setPreferredSize(new java.awt.Dimension(80, 29));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel5.add(producBorrar, gridBagConstraints);

        producConsultar.setText("Consultar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel5.add(producConsultar, gridBagConstraints);

        producModifica.setText("Modificar");
        producModifica.setEnabled(false);
        producModifica.setMaximumSize(new java.awt.Dimension(80, 29));
        producModifica.setMinimumSize(new java.awt.Dimension(80, 29));
        producModifica.setPreferredSize(new java.awt.Dimension(80, 29));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel5.add(producModifica, gridBagConstraints);

        producIncluir.setText("Incluir");
        producIncluir.setMaximumSize(new java.awt.Dimension(80, 29));
        producIncluir.setMinimumSize(new java.awt.Dimension(80, 29));
        producIncluir.setPreferredSize(new java.awt.Dimension(80, 29));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel5.add(producIncluir, gridBagConstraints);

        jPanel1.add(jPanel5, java.awt.BorderLayout.LINE_END);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Codigo");
        jLabel5.setEnabled(false);
        jLabel5.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Descripcion");
        jLabel6.setEnabled(false);
        jLabel6.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Unidad de medida");
        jLabel7.setEnabled(false);
        jLabel7.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Precio unitario");
        jLabel8.setEnabled(false);
        jLabel8.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jLabel8, gridBagConstraints);

        jTextField5.setColumns(10);
        jTextField5.setEnabled(false);
        jTextField5.setFocusCycleRoot(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jTextField5, gridBagConstraints);

        jTextField6.setColumns(10);
        jTextField6.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jTextField6, gridBagConstraints);

        jTextField7.setColumns(10);
        jTextField7.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jTextField7, gridBagConstraints);

        jTextField8.setColumns(10);
        jTextField8.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jTextField8, gridBagConstraints);

        jButton6.setText("OK");
        jButton6.setAlignmentY(0.7F);
        jButton6.setEnabled(false);
        jButton6.setMaximumSize(new java.awt.Dimension(33, 40));
        jButton6.setMinimumSize(new java.awt.Dimension(33, 40));
        jButton6.setOpaque(true);
        jButton6.setPreferredSize(new java.awt.Dimension(50, 29));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jButton6, gridBagConstraints);

        jButton5.setText("Cancelar");
        jButton5.setEnabled(false);
        jButton5.setMaximumSize(new java.awt.Dimension(80, 29));
        jButton5.setMinimumSize(new java.awt.Dimension(80, 29));
        jButton5.setPreferredSize(new java.awt.Dimension(80, 29));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel6.add(jButton5, gridBagConstraints);

        jPanel1.add(jPanel6, java.awt.BorderLayout.LINE_START);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Descripcion", "Medida", "Precio unitario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel7.add(jScrollPane2);

        jPanel1.add(jPanel7, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Catalogo de productos", jPanel1);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("About");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        activar();
        modo = Modo.MODO_CONSULTA;
        campoRol.setEnabled(false);
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed

        boolean vacios = algunCampoVacio();
        if (modo == Modo.MODO_CONSULTA) {
            // <editor-fold defaultstate="collapsed" desc="Consultar ">
            
            if (campoID.getText().isEmpty()
                    && campoNombre.getText().isEmpty()) {
                data = gestor.consultaDatosEmpleado();
                if (!data.equals(null)) {
                    tablaDatos.setModel(
                            new DefaultTableModel(
                                    data, new String[]{"ID", "Nombre", "Rol"}));
                }
            }
            if (!campoID.getText().isEmpty()
                    && campoNombre.getText().isEmpty()) {
                data = gestor.consultaDatosIDEmpleado(campoID.getText());
                System.out.println("Hola" + data);
                if (!data.equals(null)) {
                    tablaDatos.setModel(
                            new DefaultTableModel(
                                    data, new String[]{"ID", "Nombre", "Rol"}));
                }
            }
            if (campoID.getText().isEmpty()
                    && !campoNombre.getText().isEmpty()) {
                data = gestor.consultaDatosEmpleado(campoNombre.getText());
                if (!data.equals(null)) {
                    tablaDatos.setModel(
                            new DefaultTableModel(
                                    data, new String[]{"ID", "Nombre", "Rol"}));
                }
            }
            if (!campoID.getText().isEmpty()
                    && !campoNombre.getText().isEmpty()) {
                data = gestor.consultaDatosIDNomEmpleado(campoID.getText(), campoNombre.getText());
                if (!data.equals(null)) {
                    tablaDatos.setModel(
                            new DefaultTableModel(
                                    data, new String[]{"ID", "Nombre", "Rol"}));
                }
            }
            if (!(tablaDatos.getRowCount() > 0)) {
                JOptionPane.showMessageDialog(
                        null, "No se ha encontrado",
                        "", JOptionPane.INFORMATION_MESSAGE);
            }
            limpiarCampos();
            // </editor-fold>
        }
        if (modo == Modo.MODO_INCLUIR) {
            // <editor-fold defaultstate="collapsed" desc="Incluir ">    
            if (algunCampoVacio()) {
                JOptionPane.showMessageDialog(
                        null, "Hay campos sin rellener",
                        "Campos vacios !", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                gestor.agregarEmpleado(new Empleado(String.valueOf(campoRol.getSelectedItem()), String.valueOf(campoPassword.getPassword()), campoID.getText(), campoNombre.getText()));
                limpiarCampos();
                desactivar();
                JOptionPane.showMessageDialog(
                        null, "Se agregaron los datos correctamente",
                        "", JOptionPane.INFORMATION_MESSAGE);
            }
            //</editor-fold>    
        }
        if (modo == Modo.MODO_MODIFICA) {
            // <editor-fold defaultstate="collapsed" desc="Modifica ">
            gestor.actualizarEmpleado(new Empleado(String.valueOf(
                    campoRol.getSelectedItem()), String.copyValueOf(campoPassword.getPassword()), campoID.getText(), campoNombre.getText()), ID, NOM);
            data = gestor.consultaDatosIDNomEmpleado(campoID.getText(), campoNombre.getText());
            tablaDatos.setModel(
                    new DefaultTableModel(
                            data, new String[]{"ID", "Nombre", "Rol"}));
            desactivar();
            limpiarCampos();
            JOptionPane.showMessageDialog(
                    null, "Se modificaron los datos correctamente",
                    "", JOptionPane.INFORMATION_MESSAGE);
            
            //</editor-fold>
        }
        if (unaPersonaEncontrada() && modo == Modo.MODO_CONSULTA) {
            llenaYDesactiva();
            btnBorrar.setEnabled(true);
            btnModificar.setEnabled(true);
            return;
        }
        
        desactivar();
    }//GEN-LAST:event_btnOKActionPerformed

    private void limpiarCampos() {
        campoNombre.setText("");
        campoID.setText("");
        campoPassword.setText("");
    }

    private boolean unaPersonaEncontrada() {
        return tablaDatos.getRowCount() == 1;
    }

    private boolean algunCampoVacio() {
        return campoNombre.getText().isEmpty()
                || campoID.getText().isEmpty()
                || String.valueOf(campoPassword.getPassword()).isEmpty();
    }

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        modo = Modo.MODO_BORRAR;
        ID = campoID.getText();
        NOM = campoNombre.getText();
        gestor.borrarEmpleado(campoID.getText(), campoNombre.getText());
        data = gestor.consultaDatosIDNomEmpleado(ID, NOM);
        tablaDatos.setModel(
                new DefaultTableModel(
                        data, new String[]{"ID", "Nombre", "Rol"}));
        limpiarCampos();
        JOptionPane.showMessageDialog(
                null, "Se borraron los datos correctamente",
                "", JOptionPane.INFORMATION_MESSAGE);
        modo = Modo.MODO_INICIO;
        desactivar();
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void llenaYDesactiva() {
        lbRol.setEnabled(false);
        lbID.setEnabled(false);
        lbNombre.setEnabled(false);
        campoID.setEnabled(false);
        campoNombre.setEnabled(false);
        ID = String.valueOf(data[0][0]);
        campoID.setText(String.valueOf(data[0][0]));
        campoNombre.setText(String.valueOf(data[0][1]));
        campoRol.setSelectedItem(String.valueOf(data[0][2]));
        campoPassword.setText(String.valueOf(data[0][3]));
        ID = campoID.getText();
        NOM = campoNombre.getText();
    }

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        activar();
        modo = Modo.MODO_MODIFICA;
        llenaCamposYActiva();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void llenaCamposYActiva() {
        campoPassword.setEnabled(true);
        Clave.setEnabled(true);
        campoRol.setEnabled(true);
        ID = String.valueOf(data[0][0]);
        campoID.setText(String.valueOf(data[0][0]));
        campoNombre.setText(String.valueOf(data[0][1]));
        campoRol.setSelectedItem(String.valueOf(data[0][2]));
        campoPassword.setText(String.valueOf(data[0][3]));
        ID = campoID.getText();
        NOM = campoNombre.getText();
    }

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        activar();
        modo = Modo.MODO_INCLUIR;
        campoRol.setEnabled(true);
        campoPassword.setEnabled(true);
        Clave.setEnabled(true);
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        desactivar();
        btnModificar.setEnabled(false);
        limpiarCampos();
    }//GEN-LAST:event_btncancelarActionPerformed

    public Modo getModo() {
        return modo;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clave;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btncancelar;
    private javax.swing.JTextField campoID;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JPasswordField campoPassword;
    private javax.swing.JComboBox<String> campoRol;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbRol;
    private javax.swing.JButton producBorrar;
    private javax.swing.JButton producConsultar;
    private javax.swing.JButton producIncluir;
    private javax.swing.JButton producModifica;
    private javax.swing.JTable tablaDatos;
    // End of variables declaration//GEN-END:variables

    private String ID;
    private String NOM;
    private Object[][] data;
    private Modo modo;
    private final GestorPrincipal gestor;

}
